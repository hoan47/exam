const Part5 = (function () {

// Ch√®n n·ªôi dung m·∫´u
function insertSampleContent() {
    const editor = document.getElementById('part-5__editor-1');
    if (!editor) return;
    editor.value = `101. Its_______into Brazil has given Darrow Textiles Ltd an advantage over much of its competition.
(A) expansion   (B) process
(C) creation    (D) action
L·ªùi gi·∫£i: "Expansion" (s·ª± m·ªü r·ªông) l√† t·ª´ ph√π h·ª£p nh·∫•t trong ng·ªØ c·∫£nh n√†y.
Ch·ªçn: A
-------------------------------------------------------------------------------------------------------------------
102. QIB will work_______to maintain sustainable growth and expansion plans.
(A) Persisted   (B) Persistent
(C) Persistently    (D) Persistence
L·ªùi gi·∫£i: "Persistently" (li√™n t·ª•c) l√† tr·∫°ng t·ª´ ph√π h·ª£p.
Ch·ªçn: C`;
    sendEditorContent(editor.value);
}

function sendEditorContent(content) {
    fetch(`/get_editor/?editor_content=${encodeURIComponent(content)}`, {
        method: 'GET', // S·ª≠ d·ª•ng GET request
        headers: {
            'Content-Type': 'application/json' // ƒê·∫£m b·∫£o header l√† 'application/json'
        }
    })
    .then(response => response.json())  // Chuy·ªÉn ƒë·ªïi ph·∫£n h·ªìi th√†nh JSON
    .then(data => {
        try {
            const questions = JSON.parse(data.content); // Gi·∫£ s·ª≠ d·ªØ li·ªáu tr·∫£ v·ªÅ c√≥ tr∆∞·ªùng 'content'
            renderQuestions(questions);
        } catch (e) {
            console.error('Error parsing JSON:', e);
        }
    })
    .catch(error => {
        console.error('Error:', error);
    });
}

// Hi·ªÉn th·ªã c√¢u h·ªèi
function renderQuestions(questions) {
    const leftSection = document.getElementById('part-5__left-section');
    if (!leftSection) return;
    leftSection.innerHTML = '';
    if (!questions || questions.length === 0) {
        loadGuideContent();
        return;
    }
    questions.forEach((q, index) => {
        const questionDiv = document.createElement('div');
        questionDiv.className = 'question-box';
        questionDiv.innerHTML = `
            <div class="question-text">${q.text}</div>
            <div class="options">
                <div class="option">(A) ${q.option_A}</div>
                <div class="option">(B) ${q.option_B}</div>
                <div class="option">(C) ${q.option_C}</div>
                <div class="option">(D) ${q.option_D}</div>
            </div>
            <div class="correct-answer">ƒê√°p √°n ƒë√∫ng: ${q.correct_answer || 'Ch∆∞a c√≥'}</div>
            <div class="explanation">L·ªùi gi·∫£i: ${q.explanation.replace(/\n/g, '<br>')}</div>
        `;
        leftSection.appendChild(questionDiv);
    });
}

// H√†m ƒë·ªçc file PDF
async function readPDFFile(file) {
    const arrayBuffer = await file.arrayBuffer();
    const pdf = await pdfjsLib.getDocument({ data: arrayBuffer }).promise;
    const numPages = pdf.numPages;
    
    let fullText = '';  // <-- Khai b√°o fullText ·ªü ƒë√¢y ƒë·ªÉ c·ªông d·ªìn n·ªôi dung t·ª´ t·∫•t c·∫£ c√°c trang
    
    // X·ª≠ l√Ω t·ª´ng trang
    for (let i = 1; i <= numPages; i++) {
        const page = await pdf.getPage(i);
        const textContent = await page.getTextContent();
        
        // Tr√≠ch xu·∫•t th√¥ng tin v·ªÅ viewport ƒë·ªÉ t√≠nh to√°n kho·∫£ng c√°ch
        const viewport = page.getViewport({ scale: 1.0 });
        const pageWidth = viewport.width;
        
        // S·∫Øp x·∫øp c√°c ph·∫ßn t·ª≠ vƒÉn b·∫£n theo th·ª© t·ª± ƒë·ªçc t·ª± nhi√™n h∆°n
        // (t·ª´ tr√™n xu·ªëng d∆∞·ªõi, t·ª´ tr√°i sang ph·∫£i)
        const textItems = textContent.items.sort((a, b) => {
            const yDiff = b.transform[5] - a.transform[5];
            
            // N·∫øu c√πng d√≤ng (ho·∫∑c g·∫ßn c√πng d√≤ng), th√¨ so s√°nh t·ªça ƒë·ªô x (c·ªôt)
            if (Math.abs(yDiff) < 3) {
                return a.transform[4] - b.transform[4];
            }
            
            return yDiff;
        });
        
        let pageText = '';
        let lastY = null;
        let lastX = 0;
        let isNewParagraph = false;
        
        // X·ª≠ l√Ω t·ª´ng ph·∫ßn t·ª≠ vƒÉn b·∫£n tr√™n trang
        textItems.forEach(item => {
            const currentY = item.transform[5];
            const currentX = item.transform[4];
            const fontSize = Math.sqrt(item.transform[0] * item.transform[0] + item.transform[1] * item.transform[1]);
            
            // X·ª≠ l√Ω xu·ªëng d√≤ng v√† ph√¢n ƒëo·∫°n
            if (lastY !== null) {
                if (Math.abs(lastY - currentY) > fontSize * 1.5) {
                    if (Math.abs(lastY - currentY) > fontSize * 2.5 || currentX < pageWidth * 0.1) {
                        pageText += '\n\n';
                        isNewParagraph = true;
                    } else {
                        pageText += '\n';
                        isNewParagraph = false;
                    }
                } else if (currentX > lastX + fontSize * 1.5 && !isNewParagraph) {
                    const spaceCount = Math.min(Math.floor((currentX - lastX) / (fontSize * 0.6)), 10);
                    pageText += ' '.repeat(spaceCount);
                }
            }
            
            pageText += item.str;
            
            lastY = currentY;
            lastX = currentX + (item.width || 0);
        });
        
        // X·ª≠ l√Ω c√°c d·∫•u ng·∫Øt d√≤ng li√™n ti·∫øp v√† chu·∫©n h√≥a vƒÉn b·∫£n
        pageText = pageText.replace(/\n{3,}/g, '\n\n')
                        .replace(/\s+\n/g, '\n')
                        .replace(/\n\s+/g, '\n')
                        .trim();
        
        fullText += `--- Trang ${i} ---\n\n${pageText}\n\n`;
    }
    
    return fullText;  // Tr·∫£ v·ªÅ fullText sau khi x·ª≠ l√Ω xong t·∫•t c·∫£ c√°c trang
}


// H√†m x·ª≠ l√Ω khi ch·ªçn file
async function readFile(event) {
    const file = event.target.files[0];
    if (!file) return;

    const editor = document.getElementById('part-5__editor-1');
    const fileType = file.name.split('.').pop().toLowerCase();
    const fileInput = document.getElementById('part-5__file-input');
    
    if (fileType === 'pdf') {
        readPDFFile(file)
            .then(text => {
                editor.value = text;
                fileInput.value = ''; // Reset input ƒë·ªÉ ƒë·ªçc l·∫°i c√πng file
                sendEditorContent(editor.value);
            })
            .catch(error => console.error('Error reading PDF:', error));
    } else {
        alert('Vui l√≤ng ch·ªçn file PDF');
    }
}
// Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n
function loadGuideContent() {
    const leftSection = document.getElementById('part-5__left-section');
    if (!leftSection) return;
    leftSection.innerHTML = `
        <div class="guide-container">
            <h2>üìå H∆∞·ªõng D·∫´n Nh·∫≠p ƒê·ªÅ Thi</h2>
            <p>Nh·∫≠p n·ªôi dung c√¢u h·ªèi v√†o khung b√™n ph·∫£i ho·∫∑c <span class="highlight">t·∫£i l√™n file PDF</span>.</p>
            <p>H·ªá th·ªëng s·∫Ω t·ª± ƒë·ªông nh·∫≠n di·ªán c√¢u h·ªèi v√† hi·ªÉn th·ªã ·ªü ƒë√¢y.</p>
            <div class="example-box">
                101. ƒê√¢y l√† c√¢u h·ªèi m·∫´u?<br>
                (A) ƒê√°p √°n A<br>
                (B) ƒê√°p √°n B<br>
                (C) ƒê√°p √°n C<br>
                (D) ƒê√°p √°n D<br>
                L·ªùi gi·∫£i: Gi·∫£i th√≠ch t·∫°i sao ch·ªçn A.<br>Ch·ªçn: A
            </div>
            <button onclick="Part5.insertSampleContent()">üîç Xem v√≠ d·ª•</button>
        </div>`;
}

return {
    insertSampleContent,
    sendEditorContent,
    renderQuestions,
    loadGuideContent,
    readFile
};
})();

// exam_create_part5.js
document.addEventListener('DOMContentLoaded', () => {
    Part5.loadGuideContent();

    const editor = document.getElementById('part-5__editor-1');
    if (editor) {
        editor.addEventListener('input', () => {
            // G·ª≠i n·ªôi dung l√™n server
            Part5.sendEditorContent(editor.value);
            // X√≥a s·∫°ch n·∫øu r·ªóng
            if (!editor.value.trim()) {
                editor.value = ''; // ƒê·∫∑t l·∫°i th√†nh r·ªóng
            }
        });
    }
});