const Part5 = (function () {

// Ch√®n n·ªôi dung m·∫´u
function insertSampleContent() {
    const editor = document.getElementById('part-5__editor-1');
    if (!editor) return;
    editor.value = `101. Its_______into Brazil has given Darrow Textiles Ltd an advantage over much of its competition.
(A) expansion   (B) process
(C) creation    (D) action
L·ªùi gi·∫£i: "Expansion" (s·ª± m·ªü r·ªông) l√† t·ª´ ph√π h·ª£p nh·∫•t trong ng·ªØ c·∫£nh n√†y.
Ch·ªçn: A
-------------------------------------------------------------------------------------------------------------------
102. QIB will work_______to maintain sustainable growth and expansion plans.
(A) Persisted   (B) Persistent
(C) Persistently    (D) Persistence
L·ªùi gi·∫£i: "Persistently" (li√™n t·ª•c) l√† tr·∫°ng t·ª´ ph√π h·ª£p.
Ch·ªçn: C`;
    sendEditorContent(editor.value);
}

function sendEditorContent(content) {
    fetch(`/get_editor/?editor_content=${encodeURIComponent(content)}`, {
        method: 'GET', // S·ª≠ d·ª•ng GET request
        headers: {
            'Content-Type': 'application/json' // ƒê·∫£m b·∫£o header l√† 'application/json'
        }
    })
    .then(response => response.json())  // Chuy·ªÉn ƒë·ªïi ph·∫£n h·ªìi th√†nh JSON
    .then(data => {
        try {
            const questions = JSON.parse(data.content); // Gi·∫£ s·ª≠ d·ªØ li·ªáu tr·∫£ v·ªÅ c√≥ tr∆∞·ªùng 'content'
            renderQuestions(questions);
        } catch (e) {
            console.error('Error parsing JSON:', e);
        }
    })
    .catch(error => {
        console.error('Error:', error);
    });
}

// Hi·ªÉn th·ªã c√¢u h·ªèi
function renderQuestions(questions) {
    const leftSection = document.getElementById('part-5__left-section');
    if (!leftSection) return;
    leftSection.innerHTML = '';
    if (!questions || questions.length === 0) {
        loadGuideContent();
        return;
    }
    questions.forEach((q, index) => {
        const questionDiv = document.createElement('div');
        questionDiv.className = 'question-box';
        questionDiv.innerHTML = `
            <div class="question-text">${q.text}</div>
            <div class="options">
                <div class="option">(A) ${q.option_A}</div>
                <div class="option">(B) ${q.option_B}</div>
                <div class="option">(C) ${q.option_C}</div>
                <div class="option">(D) ${q.option_D}</div>
            </div>
            <div class="correct-answer">ƒê√°p √°n ƒë√∫ng: ${q.correct_answer || 'Ch∆∞a c√≥'}</div>
            <div class="explanation">L·ªùi gi·∫£i: ${q.explanation.replace(/\n/g, '<br>')}</div>
        `;
        leftSection.appendChild(questionDiv);
    });
}

// H√†m ƒë·ªçc file PDF
async function readPDFFile(file) {
    const arrayBuffer = await file.arrayBuffer();
    const pdf = await pdfjsLib.getDocument({ data: arrayBuffer }).promise;
    let text = '';

    for (let i = 1; i <= pdf.numPages; i++) {
        const page = await pdf.getPage(i);
        const textContent = await page.getTextContent();
        let pageText = '';
        let lastY = null;
        textContent.items.forEach(item => {
            if (lastY !== null && Math.abs(lastY - item.transform[5]) > 5) {
                pageText += '\n';
            }
            pageText += item.str + ' ';
            lastY = item.transform[5];
        });
        text += pageText.trim() + '\n\n';
    }

    return text;
}

// H√†m x·ª≠ l√Ω khi ch·ªçn file
async function readFile(event) {
    const file = event.target.files[0];
    if (!file) return;

    const editor = document.getElementById('part-5__editor-1');
    const fileType = file.name.split('.').pop().toLowerCase();
    const fileInput = document.getElementById('part-5__file-input');
    
    if (fileType === 'pdf') {
        readPDFFile(file)
            .then(text => {
                editor.value = text;
                sendEditorContent(editor.innerText);
                fileInput.value = ''; // Reset input ƒë·ªÉ ƒë·ªçc l·∫°i c√πng file
            })
            .catch(error => console.error('Error reading PDF:', error));
    } else {
        alert('Vui l√≤ng ch·ªçn file PDF');
    }
}
// Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n
function loadGuideContent() {
    const leftSection = document.getElementById('part-5__left-section');
    if (!leftSection) return;
    leftSection.innerHTML = `
        <div class="guide-container">
            <h2>üìå H∆∞·ªõng D·∫´n Nh·∫≠p ƒê·ªÅ Thi</h2>
            <p>Nh·∫≠p n·ªôi dung c√¢u h·ªèi v√†o khung b√™n ph·∫£i ho·∫∑c <span class="highlight">t·∫£i l√™n file PDF</span>.</p>
            <p>H·ªá th·ªëng s·∫Ω t·ª± ƒë·ªông nh·∫≠n di·ªán c√¢u h·ªèi v√† hi·ªÉn th·ªã ·ªü ƒë√¢y.</p>
            <div class="example-box">
                101. ƒê√¢y l√† c√¢u h·ªèi m·∫´u?<br>
                (A) ƒê√°p √°n A<br>
                (B) ƒê√°p √°n B<br>
                (C) ƒê√°p √°n C<br>
                (D) ƒê√°p √°n D<br>
                L·ªùi gi·∫£i: Gi·∫£i th√≠ch t·∫°i sao ch·ªçn A.<br>Ch·ªçn: A
            </div>
            <button onclick="Part5.insertSampleContent()">üîç Xem v√≠ d·ª•</button>
        </div>`;
}

return {
    insertSampleContent,
    sendEditorContent,
    renderQuestions,
    loadGuideContent,
    readFile
};
})();

// exam_create_part5.js
document.addEventListener('DOMContentLoaded', () => {
    Part5.loadGuideContent();

    const editor = document.getElementById('part-5__editor-1');
    if (editor) {
        editor.addEventListener('input', () => {
            // G·ª≠i n·ªôi dung l√™n server
            Part5.sendEditorContent(editor.value);
            // X√≥a s·∫°ch n·∫øu r·ªóng
            if (!editor.value.trim()) {
                editor.value = ''; // ƒê·∫∑t l·∫°i th√†nh r·ªóng
            }
        });
    }
});